export const projects = [
    {
        "title": "Website Clinic Rampani",
        "slug": "clinic-rampani",
        "smallDescription": "Remaked website to Clinic Rampani",
        "description": "*The website cited in deploy button is old* </br> Developing all website using Laravel, Vue, Tailwind, PHP, and JavaScript was a structured journey, starting from planning to implementation. I carefully defined the requirements, considering my target audience, desired content, and visual design. I set up the Laravel environment using Composer and installed Livewire to facilitate the development of dynamic components. I built the frontend using Bootstrap for a modern and responsive design, integrating it into my Vue components and configuring JavaScript as needed. I created routes and controllers to direct the flow of my application, opting for data modeling when necessary for dynamic information. I developed pages and components in Laravel, using Blade views and Livewire components for dynamic areas such as the display of projects. Integration with the backend (PHP) was achieved through controllers to retrieve data from the database, implementing PHP logic as needed.",
        "technologies": "PHP, Laravel, Vue, JavaScript, Tailwind",
        "repository": "https://github.com/mthiagoalves/rampani-project",
        "deploy": "https://clinicarampani.com.br",
        "order": 1
    },
    {
        "title": "Portfolio Alexandre",
        "slug": "portfolio-alexandre",
        "smallDescription": "Portfolio maked to my friend Alexandre...",
        "description": "Developing portfolio using Laravel, Livewire, Bootstrap, PHP, and JavaScript was a structured journey, starting from planning to implementation. I carefully defined the requirements, considering my target audience, desired content, and visual design. I set up the Laravel environment using Composer and installed Livewire to facilitate the development of dynamic components. I built the frontend using Bootstrap for a modern and responsive design, integrating it into my Blade files and configuring JavaScript as needed. I created routes and controllers to direct the flow of my application, opting for data modeling when necessary for dynamic information. I developed pages and components in Laravel, using Blade views and Livewire components for dynamic areas such as the display of projects. Integration with the backend (PHP) was achieved through controllers to retrieve data from the database, implementing PHP logic as needed.",
        "technologies": "PHP, Laravel, Liveware, JavaScript, Botstrap",
        "repository": "https://github.com/mthiagoalves/portfolio-alexandre",
        "deploy": "https://alexandrepiedade.com",
        "order": 2
    },
    {
        "title": "Portfolio Juliana",
        "slug": "portfolio-juliana",
        "smallDescription": "Portfolio maked to Juliana Rampani...",
        "description": "Developing portfolio using Laravel, Livewire, Bootstrap, PHP, and JavaScript was a structured journey, starting from planning to implementation. I carefully defined the requirements, considering my target audience, desired content, and visual design. I set up the Laravel environment using Composer and installed Livewire to facilitate the development of dynamic components. I built the frontend using Bootstrap for a modern and responsive design, integrating it into my Blade files and configuring JavaScript as needed. I created routes and controllers to direct the flow of my application, opting for data modeling when necessary for dynamic information. I developed pages and components in Laravel, using Blade views and Livewire components for dynamic areas such as the display of projects. Integration with the backend (PHP) was achieved through controllers to retrieve data from the database, implementing PHP logic as needed.",
        "technologies": "PHP, Laravel, Liveware, JavaScript, Botstrap",
        "repository": "https://github.com/mthiagoalves/portifolio-dra-juliana-rampani",
        "deploy": "https://clinicarampani.com.br/juliana-rampani",
        "order": 3
    },
    {
        "title": "Full Backoffice",
        "slug": "backoffice",
        "smallDescription": "Project created for Circu of the Covet Group...",
        "description": "<b>1. Definition of Goals and Requirements:</b> I initiated the project by creating a clear list of goals and requirements for the back office. This included identifying essential functionalities such as product management, order processing, customer management, inventory tracking, and sales analytics. <b>2. Data Structure:</b> I developed a robust database schema to store all necessary information. I configured tables for products, customers, orders, order history, inventory, and more. I used the MySQL database management system to ensure efficiency and scalability. <b>3. Back-End Development:</b> I created the back-end logic for the system, choosing Laravel to develop the required APIs. This allowed seamless communication between the front-end and the back office. Functionalities included the ability to add, edit, and delete products, manage orders, track inventory, and more. <b>4. Security:</b> I implemented rigorous security measures to protect sensitive data from customers and the company. This involved user authentication, role-based authorization, and data encryption. <b>5. Front-End Development:</b> I developed the front-end using Laravel's Blade as requested by the company. I created an intuitive and user-friendly interface for the team to easily manage products, orders, and customers. I also included charts and reports for sales analysis. <b>6. Testing and Debugging:</b> I conducted extensive testing to ensure all functionalities worked seamlessly. Any bugs discovered were addressed before the launch. <b>7. Hosting and Deployment:</b> I selected a reliable hosting platform and deployed the back office. I ensured that all security settings were configured correctly. <b>8. Team Training:</b> I trained the team that would use the back office, ensuring they were well-prepared to effectively use all functionalities. <b>9. Maintenance and Continuous Improvement:</b> After the launch, I continued monitoring the system, fixing bugs, applying security updates, and implementing improvements based on team and user feedback. <i>The successful completion of this back-office creation project for the e-commerce website was crucial for the efficiency and success of the online business.</i>",
        "technologies": "PHP, JavaScript, Laravel, Bootstrap, Blade",
        "repository": "https://github.com/mthiagoalves/",
        "deploy": "https://www.circu.net/dashboard/login",
        "order": 4
    },
    {
        "title": "Refactoring Frontend",
        "slug": "circu-frontend",
        "smallDescription": "Project created for Circu of the Covet Group...",
        "description": "<b>1 - Evaluation and Analysis:</b> I initiated the process by conducting a comprehensive analysis of the existing website. I reviewed all front-end elements such as design, layout, navigation, usability, and performance. I also understood the objectives of the redesign, whether it was to enhance user experience, update the appearance, or add new features. <b>2 - Definition of Objectives:</b> Based on the analysis, I clearly defined the objectives of the front-end redesign. For example, objectives included improving usability, making the site mobile-responsive, updating the design for a modern look, or increasing loading speed. <b>Design and Prototyping:</b> I collaborated with the UI/UX team for the design of the new front-end. This involved creating wireframes and prototypes to visualize how the new site would look. I worked with graphic designers to develop an attractive and modern visual that aligned with the redesign goals. <b>4 - Front-End Development:</b> I began coding the new front-end based on the approved design and prototypes. I utilized technologies such as Bootstrap, HTML5, CSS3, and JavaScript to create a responsive and high-performance site. I ensured that the code was optimized for SEO. <b>5 - Testing and Debugging:</b> Rigorous testing was conducted across different browsers and devices to ensure the site functioned correctly and provided a consistent user experience. I addressed any bugs or compatibility issues that arose during testing. <b>6 - Performance Optimization:</b> I optimized the site's performance by minimizing loading times, compressing images, and reducing resource usage. This was crucial to ensure the site was fast and responsive. <b>7 - Content and Data Migration:</b> I transferred existing content to the new site, ensuring that all relevant information was retained. I ensured URLs were redirected appropriately to avoid link breaks. <b>8 - Usability Testing:</b> Real-user usability tests were conducted to evaluate the effectiveness of the implemented usability improvements during the redesign. Feedback was collected, and adjustments were made as necessary. <b>9- Launch and Monitoring:</b> After the successful completion of the redesign, I launched the new front-end. I monitored the site post-launch to ensure everything worked as planned and that the redesign objectives were achieved. <b>10 - Continuous Maintenance and Improvement:</b> Understanding that front-end redesign is an ongoing process, I continued regular maintenance and considered future enhancements as the site's and users' needs evolved.",
        "technologies": "JavaScript, PHP, React, Laravel",
        "repository": "https://github.com/mthiagoalves/",
        "deploy": "https://www.circu.net",
        "order": 5
    },
    {
        "title": "Refactoring Frontend",
        "slug": "refactoring-frontend",
        "smallDescription": "Project created for Caffe Latte of the Covet Group...",
        "description": "<b>1 - Evaluation and Analysis:</b> I initiated the process by conducting a comprehensive analysis of the existing website. I reviewed all front-end elements such as design, layout, navigation, usability, and performance. I also understood the objectives of the redesign, whether it was to enhance user experience, update the appearance, or add new features. <b>2 - Definition of Objectives:</b> Based on the analysis, I clearly defined the objectives of the front-end redesign. For example, objectives included improving usability, making the site mobile-responsive, updating the design for a modern look, or increasing loading speed. <b>Design and Prototyping:</b> I collaborated with the UI/UX team for the design of the new front-end. This involved creating wireframes and prototypes to visualize how the new site would look. I worked with graphic designers to develop an attractive and modern visual that aligned with the redesign goals. <b>4 - Front-End Development:</b> I began coding the new front-end based on the approved design and prototypes. I utilized technologies such as Bootstrap, HTML5, CSS3, and JavaScript to create a responsive and high-performance site. I ensured that the code was optimized for SEO. <b>5 - Testing and Debugging:</b> Rigorous testing was conducted across different browsers and devices to ensure the site functioned correctly and provided a consistent user experience. I addressed any bugs or compatibility issues that arose during testing. <b>6 - Performance Optimization:</b> I optimized the site's performance by minimizing loading times, compressing images, and reducing resource usage. This was crucial to ensure the site was fast and responsive. <b>7 - Content and Data Migration:</b> I transferred existing content to the new site, ensuring that all relevant information was retained. I ensured URLs were redirected appropriately to avoid link breaks. <b>8 - Usability Testing:</b> Real-user usability tests were conducted to evaluate the effectiveness of the implemented usability improvements during the redesign. Feedback was collected, and adjustments were made as necessary. <b>9- Launch and Monitoring:</b> After the successful completion of the redesign, I launched the new front-end. I monitored the site post-launch to ensure everything worked as planned and that the redesign objectives were achieved. <b>10 - Continuous Maintenance and Improvement:</b> Understanding that front-end redesign is an ongoing process, I continued regular maintenance and considered future enhancements as the site's and users' needs evolved.",
        "technologies": "JavaScript, PHP, React, Laravel",
        "repository": "https://github.com/mthiagoalves/",
        "deploy": "https://www.caffelattehome.com",
        "order": 6
    },
    {
        "title": "Backend Buy Cart",
        "slug": "backend-buy-card",
        "smallDescription": "Project created for Covet Group...",
        "description": "<b>1 - Definition of Goals and Requirements:</b> To begin, I clearly defined the goals and requirements for the shopping cart simulation. This included the ability to add and remove products, calculate the total purchase, apply discounts, handle multiple items, and automatically update the cart. <b>2 - Data Structure:</b> I developed the necessary data structure to represent the shopping cart. This included information about each item in the cart, such as product ID, quantity, price, and any other relevant details, using PostgreSQL. <b>3 - Back-End Development:</b> I created the back-end logic to manage the shopping cart, using NestJs to develop the necessary APIs. Functionalities included adding products, removing products, calculating the total, applying discounts, and handling real-time cart update events. <b>4 - Security:</b> I implemented security measures to protect cart data, such as product and price information. This could include data validation and protection against attacks, such as SQL injection. <b>5 - Testing and Debugging:</b> I conducted extensive tests to ensure that the shopping cart worked correctly in different scenarios. This included tests for addition, removal, total calculation, discount application, and real-time updates. <b>6 - Documentation:</b> I created clear documentation with Swagger for developers working with the shopping cart, explaining how it functions, what APIs are available, and how to integrate it into the front-end. <b>7 - Deployment:</b> I deployed the shopping cart to the production environment of the e-commerce website, ensuring it is scalable and reliable to handle a large number of customers and transactions. <b>8 - Maintenance and Continuous Improvement:</b> After the launch, I continued monitoring the performance of the shopping cart and made adjustments as necessary. I also considered future enhancements, such as adding wishlist features or integrating with payment systems. <i>Developing an effective shopping cart simulation is crucial to providing a smooth and satisfying shopping experience for customers on an e-commerce website.</i>",
        "technologies": "JavaScript, TypeScript, NestJs, PostgreSQL",
        "repository": "https://github.com/mthiagoalves/test-consort-group",
        "deploy": "https://github.com/mthiagoalves/test-consort-group",
        "order": 7
    },
    {
        "title": "Restaurant Orders*Backend",
        "slug": "restaurant-orders",
        "smallDescription": "Freelancer project for restaurants to be able to accept new orders...",
        "description": "Project created for Covet Group, where i make a backoffice using Laravel with...",
        "technologies": "PHP, Laravel",
        "repository": "https://github.com/mthiagoalves/restaurant_API",
        "deploy": "https://github.com/mthiagoalves/restaurant_API",
        "order": 8
    },
    {
        "title": "New implements Backoffice",
        "slug": "backoffice-mv",
        "smallDescription": "New features implemented in Maison Valentina's of the Cover Group",
        "description": "<b>1. Definition of Goals and Requirements:</b> I initiated the project by creating a clear list of goals and requirements for the back office. This included identifying essential functionalities such as product management, order processing, customer management, inventory tracking, and sales analytics. <b>2. Data Structure:</b> I developed a robust database schema to store all necessary information. I configured tables for products, customers, orders, order history, inventory, and more. I used the MySQL database management system to ensure efficiency and scalability. <b>3. Back-End Development:</b> I created the back-end logic for the system, choosing Laravel to develop the required APIs. This allowed seamless communication between the front-end and the back office. Functionalities included the ability to add, edit, and delete products, manage orders, track inventory, and more. <b>4. Security:</b> I implemented rigorous security measures to protect sensitive data from customers and the company. This involved user authentication, role-based authorization, and data encryption. <b>5. Front-End Development:</b> I developed the front-end using Laravel's Blade as requested by the company. I created an intuitive and user-friendly interface for the team to easily manage products, orders, and customers. I also included charts and reports for sales analysis. <b>6. Testing and Debugging:</b> I conducted extensive testing to ensure all functionalities worked seamlessly. Any bugs discovered were addressed before the launch. <b>7. Hosting and Deployment:</b> I selected a reliable hosting platform and deployed the back office. I ensured that all security settings were configured correctly. <b>8. Team Training:</b> I trained the team that would use the back office, ensuring they were well-prepared to effectively use all functionalities. <b>9. Maintenance and Continuous Improvement:</b> After the launch, I continued monitoring the system, fixing bugs, applying security updates, and implementing improvements based on team and user feedback. <i>The successful completion of this back-office creation project for the e-commerce website was crucial for the efficiency and success of the online business.",
        "technologies": "JavaScript, PHP, Laravel, Bootstrap, Swiper",
        "repository": "https://github.com/mthiagoalves/",
        "deploy": "https://www.maisonvalentina.net/en/",
        "order": 9
    },
];